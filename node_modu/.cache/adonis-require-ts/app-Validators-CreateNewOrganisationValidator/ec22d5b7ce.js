"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class CreateNewOrganisationValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            name: Validator_1.schema.string({ trim: true, escape: true }, [Validator_1.rules.unique({
                    table: "organisations",
                    column: "name"
                })]),
            description: Validator_1.schema.string.optional({ trim: true, escape: true }),
        });
        this.messages = {
            "name.unique": "Organisation name already exist, choose another name",
            "name.string": "Organisation name can only be a string"
        };
    }
}
exports.default = CreateNewOrganisationValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRlTmV3T3JnYW5pc2F0aW9uVmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ3JlYXRlTmV3T3JnYW5pc2F0aW9uVmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkVBQXlFO0FBR3pFLE1BQXFCLDhCQUE4QjtJQUNqRCxZQUFzQixHQUF3QjtRQUF4QixRQUFHLEdBQUgsR0FBRyxDQUFxQjtRQXFCdkMsV0FBTSxHQUFHLGtCQUFNLENBQUMsTUFBTSxDQUFDO1lBQzVCLElBQUksRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQyxFQUFDLENBQUMsaUJBQUssQ0FBQyxNQUFNLENBQUM7b0JBQ3pELEtBQUssRUFBRSxlQUFlO29CQUN0QixNQUFNLEVBQUUsTUFBTTtpQkFDakIsQ0FBQyxDQUFDLENBQUM7WUFDSixXQUFXLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFDLENBQUM7U0FDaEUsQ0FBQyxDQUFBO1FBYUssYUFBUSxHQUFtQjtZQUNoQyxhQUFhLEVBQUUsc0RBQXNEO1lBQ3JFLGFBQWEsRUFBRSx3Q0FBd0M7U0FDeEQsQ0FBQTtJQTNDZ0QsQ0FBQztDQTRDbkQ7QUE3Q0QsaURBNkNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZW1hLCBDdXN0b21NZXNzYWdlcyxydWxlcyB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvVmFsaWRhdG9yJ1xuaW1wb3J0IHR5cGUgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3JlYXRlTmV3T3JnYW5pc2F0aW9uVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN0eDogSHR0cENvbnRleHRDb250cmFjdCkge31cblxuICAvKlxuICAgKiBEZWZpbmUgc2NoZW1hIHRvIHZhbGlkYXRlIHRoZSBcInNoYXBlXCIsIFwidHlwZVwiLCBcImZvcm1hdHRpbmdcIiBhbmQgXCJpbnRlZ3JpdHlcIiBvZiBkYXRhLlxuICAgKlxuICAgKiBGb3IgZXhhbXBsZTpcbiAgICogMS4gVGhlIHVzZXJuYW1lIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZy4gQnV0IHRoZW4gYWxzbywgaXQgc2hvdWxkXG4gICAqICAgIG5vdCBjb250YWluIHNwZWNpYWwgY2hhcmFjdGVycyBvciBudW1iZXJzLlxuICAgKiAgICBgYGBcbiAgICogICAgIHNjaGVtYS5zdHJpbmcoWyBydWxlcy5hbHBoYSgpIF0pXG4gICAqICAgIGBgYFxuICAgKlxuICAgKiAyLiBUaGUgZW1haWwgbXVzdCBiZSBvZiBkYXRhIHR5cGUgc3RyaW5nLCBmb3JtYXR0ZWQgYXMgYSB2YWxpZFxuICAgKiAgICBlbWFpbC4gQnV0IGFsc28sIG5vdCB1c2VkIGJ5IGFueSBvdGhlciB1c2VyLlxuICAgKiAgICBgYGBcbiAgICogICAgIHNjaGVtYS5zdHJpbmcoW1xuICAgKiAgICAgICBydWxlcy5lbWFpbCgpLFxuICAgKiAgICAgICBydWxlcy51bmlxdWUoeyB0YWJsZTogJ3VzZXJzJywgY29sdW1uOiAnZW1haWwnIH0pLFxuICAgKiAgICAgXSlcbiAgICogICAgYGBgXG4gICAqL1xuICBwdWJsaWMgc2NoZW1hID0gc2NoZW1hLmNyZWF0ZSh7XG4gICAgbmFtZTogc2NoZW1hLnN0cmluZyh7dHJpbTogdHJ1ZSwgZXNjYXBlOiB0cnVlfSxbcnVsZXMudW5pcXVlKHtcbiAgICAgICAgdGFibGU6IFwib3JnYW5pc2F0aW9uc1wiLFxuICAgICAgICBjb2x1bW46IFwibmFtZVwiXG4gICAgfSldKSxcbiAgICBkZXNjcmlwdGlvbjogc2NoZW1hLnN0cmluZy5vcHRpb25hbCh7dHJpbTogdHJ1ZSwgZXNjYXBlOiB0cnVlfSksXG4gIH0pXG5cbiAgLyoqXG4gICAqIEN1c3RvbSBtZXNzYWdlcyBmb3IgdmFsaWRhdGlvbiBmYWlsdXJlcy4gWW91IGNhbiBtYWtlIHVzZSBvZiBkb3Qgbm90YXRpb24gYCguKWBcbiAgICogZm9yIHRhcmdldGluZyBuZXN0ZWQgZmllbGRzIGFuZCBhcnJheSBleHByZXNzaW9ucyBgKCopYCBmb3IgdGFyZ2V0aW5nIGFsbFxuICAgKiBjaGlsZHJlbiBvZiBhbiBhcnJheS4gRm9yIGV4YW1wbGU6XG4gICAqXG4gICAqIHtcbiAgICogICAncHJvZmlsZS51c2VybmFtZS5yZXF1aXJlZCc6ICdVc2VybmFtZSBpcyByZXF1aXJlZCcsXG4gICAqICAgJ3Njb3Jlcy4qLm51bWJlcic6ICdEZWZpbmUgc2NvcmVzIGFzIHZhbGlkIG51bWJlcnMnXG4gICAqIH1cbiAgICpcbiAgICovXG4gIHB1YmxpYyBtZXNzYWdlczogQ3VzdG9tTWVzc2FnZXMgPSB7XG4gICAgXCJuYW1lLnVuaXF1ZVwiOiBcIk9yZ2FuaXNhdGlvbiBuYW1lIGFscmVhZHkgZXhpc3QsIGNob29zZSBhbm90aGVyIG5hbWVcIixcbiAgICBcIm5hbWUuc3RyaW5nXCI6IFwiT3JnYW5pc2F0aW9uIG5hbWUgY2FuIG9ubHkgYmUgYSBzdHJpbmdcIlxuICB9XG59XG4iXX0=